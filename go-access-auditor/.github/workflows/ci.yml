name: Full CI

on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ main, master ]

jobs:
  lint:
    name: Lint (golangci-lint)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.x"
          cache: true

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh \
            | sh -s -- -b $(go env GOPATH)/bin v1.59.1

      - name: Run linter
        run: golangci-lint run ./...

  build:
    name: Build binaries
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.x"
          cache: true

      - name: Go mod tidy
        run: go mod tidy

      - name: Build server
        run: go build -o bin/go-access-auditor ./cmd/server

      - name: Build agent
        run: go build -o bin/go-access-agent ./cmd/agent

  tests:
    name: Unit & Integration Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.x"
          cache: true

      - name: Run tests
        run: go test ./... -v -cover

  policy-qa:
    name: Policy QA
    runs-on: ubuntu-latest
    needs: tests
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.x"
          cache: true

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Go mod tidy
        run: go mod tidy

      - name: Build rules tester
        run: |
          mkdir -p bin
          go build -o bin/rules-tester ./tools/rules_tester.go

      - name: Validate policies (prudent)
        run: ./bin/rules-tester policies/rules.prudent.yaml policies/examples/prudent.jsonl

      - name: Validate policies (aggressive)
        run: ./bin/rules-tester policies/rules.aggressive.yaml policies/examples/aggressive.jsonl

      - name: Validate policies (extended)
        run: ./bin/rules-tester policies/rules.extended.yaml policies/examples/aggressive.jsonl

      - name: Unit tests (rules)
        run: go test ./internal/rules -v